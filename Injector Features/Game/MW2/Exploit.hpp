#pragma once

//#define USE_IW4X

namespace Game
{
	namespace MW2
	{
		class Client;

		class Exploit
		{
		public:
			std::string buildPayload(int num);

		private:
			void allocateMemory(std::vector<DWORD>* stack, DWORD address, DWORD size);
			void writeDataInEax(std::vector<DWORD>* stack, std::string data);
			void freeMemory(std::vector<DWORD>* stack, DWORD address);
			void writeData(std::vector<DWORD>* stack, DWORD address, std::string data);

			void writeFunction(std::vector<DWORD>* stack, DWORD address, void* function);
			void callFunction(std::vector<DWORD>* stack, DWORD address, void* function = nullptr, DWORD paramCount = 0, ...);

			void pop(std::vector<DWORD>* stack, size_t params);

			void quit(std::vector<DWORD>* stack);
			void restore(std::vector<DWORD>* stack);

			void spawnHudElement(std::vector<DWORD>* stack, std::string text);
			static void HudElementStub();

			void spawnWorkerThread(std::vector<DWORD>* stack);
			static void ExploitWorkerStub();
			static void ExploitWorkerCaller();

			void enableSteamAuthExploit(std::vector<DWORD>* stack);
			static void EnableSteamAuthExploitStub();

			void enableUfoMode(std::vector<DWORD>* stack);
			static void EnableUfoModeStub();
		};
	}
}
